#include <msp430.h> 

#define LED1    BIT1

#define SETP1(a)    (P1DIR |= a)

#define ONP1(x)     (P1OUT |= (x))
#define OFFP1(x)    (P1OUT &= ~(x))
#define TOGGLEP1(x) (P1OUT ^= (x))

volatile unsigned int counter = 10;

int main(void)
{
	WDTCTL = WDTPW | WDTHOLD;	// stop watchdog timer
	PM5CTL0 &= ~LOCKLPM5;
	SETP1(LED1);
	TB0CTL = TBSSEL_1 | CNTL_1 | MC_2 | ID_3 | TBCLR | TBIE;
	ONP1(LED1);
	
	__enable_interrupt();

	while(1){}

}

/*
     //Timer0_B interrupt test
#pragma vector = TIMER0_B1_VECTOR
__interrupt void ISR_TB0_Overflow(void){

    TOGGLEP1(LED1);

   TB0CTL &= ~TBIFG;             // Clear IRQ Flag
}

*/

     //Timer0_B 10 second test
#pragma vector = TIMER0_B1_VECTOR
__interrupt void ISR_TB0_Overflow(void){

    if (counter == 0){
        TOGGLEP1(LED1);
        counter = 10;
    }
    else
        counter--;

    TB0CTL &= ~TBIFG;             // Clear IRQ Flag
}
